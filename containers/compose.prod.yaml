volumes:
  seconddx_web_media: {}
  certbot_conf: {}
  certbot_www: {}
  static_root: {}

services:
  seconddx-web-base:
    image: ghcr.io/seconddx/seconddx-web:prod
    build:
      context: ..
      dockerfile: ./containers/django/prod/Dockerfile

  seconddx-web:
    extends: seconddx-web-base
    ports:
      - "8000:8000"
    volumes:
      - static_root:${DJANGO_STATIC_ROOT}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  nginx:
    hostname: literev-nginx
    image: nginx:1.25.3
    restart: unless-stopped
    depends_on:
      seconddx-web:
        condition: service_healthy
    ports:
      - 443:443
      - 80:80
    volumes:
      - ../containers/nginx/data/config/prod:/etc/nginx/conf.d
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - static_root:/usr/share/nginx/html/${CERTBOT_DOMAIN}/static
    healthcheck:
      disable: true
    command: >
      /bin/sh -c 'while :; do
        sleep 6h & wait $${!};
        nginx -s reload;
      done &
      nginx -g "daemon off;"'

  certbot:
    image: certbot/certbot:v2.7.4
    restart: unless-stopped
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: >
      /bin/sh -c '
        trap exit TERM;
        while :; do
          certbot renew;
          sleep 12h & wait $${!};
        done;
      '

  celeryworker:
    extends: seconddx-web-base
    build: !reset null

  celerybeat:
    extends: seconddx-web-base
    build: !reset null

  flower:
    extends: seconddx-web-base
    build: !reset null
