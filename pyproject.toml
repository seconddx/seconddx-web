[project]
name = "seconddx-web"
version = "0.1.0"
description = "Mental Healthcare"
authors = [
  { name = "Ivan Ogasawara", email = "ivan.ogasawara@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.12,<3.13"

dependencies = [
  "python-slugify >=8.0.4",
  "pillow >=10.4.0",
  "rcssmin >=1.1.2",
  "argon2-cffi >=23.1.0",
  "whitenoise >=6.7.0",
  "redis >=5.0.8",
  "hiredis >=3.0.0",
  "celery >=5.4.0",
  "django-celery-beat >=2.7.0",
  "flower >=2.0.1",
  "uvicorn-worker >=0.2.0",
  "django >=5.1.1",
  "django-environ >=0.11.2",
  "django-model-utils >=5.0.0",
  "django-crispy-forms >=2.3",
  "crispy-bootstrap5 >=2024.2",
  "django-compressor >=4.5.1",
  "django-redis >=5.4.0",
  "djangorestframework >=3.15.2",
  "django-cors-headers >=4.4.0",
  "drf-spectacular >=0.27.2",
  "gunicorn >=23.0.0",
  "sentry-sdk >=2.14.0",
  "django-anymail >=12.0",
  "django-simple-history >=3.7.0",
  "openai >=1.30.1      ",
  "dash >=2.17.0",
  "plotly >=5.22.0",
  "pandas >=2.2.2",
  "joblib >=1.4.2",
  "tiktoken >=0.7.0",
  "transformers >=4.46",
  "django-stronghold >=0.4.0",
  "psycopg[pool,binary] (>=3.2.4)",
  "django-allauth[mfa] (>=65.0.1,<66.0.0)",
  "torch (>=2.3.0,<3.0.0)",
  "uvicorn[standard] (>=0.30.6,<0.31.0)",
  "django-stronghold >=0.4.0",
  "rago >=0.12.0",
  "torch >=2.5.0",    
  "torchvision ==0.20.0",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
blis = "<1.2"
numpy = "<2"
torch = [
  {version = "==2.5.0", source="pytorch-cpu"},
]
torchvision = [
  {version = "==0.20.0", source="pytorch-cpu"},
]

[tool.poetry.group.dev.dependencies]
makim = "1.19.0"
compose-go = ">=2.29.7,<2.31.0"
containers-sugar = "1.16.1"
ruff = "^0.6.8"
watchdog = "^5.0.2"
werkzeug = {extras = ["watchdog"], version = "^3.0.4"}
ipdb = "^0.13.13"
watchfiles = "^0.24.0"
mypy = "^1.11.2"
django-stubs = {extras = ["compatible-mypy"], version = "^5.1.0"}
pytest = "^8.3.3"
pytest-sugar = "^1.0.0"
djangorestframework-stubs = "^3.15.1"
coverage = "^7.6.1"
djlint = "^1.35.2"
pre-commit = "^3.8.0"
factory-boy = "^3.3.1"
django-debug-toolbar = "^4.4.6"
django-extensions = "^3.2.3"
django-coverage-plugin = "^3.1.0"
pytest-django = "^4.9.0"
mccabe = "^0.7.0"
vulture = "^2.12"
bandit = "^1.7.10"
pytest-cov = ">=5"
jupyterlab = ">=4.0.5"
mkdocs = ">=1.4.3"
mkdocs-exclude = ">=1.0.2"
mkdocs-jupyter = ">=0.24.7"
mkdocs-literate-nav = ">=0.6.0"
mkdocs-macros-plugin = ">=0.7.0,<1"
mkdocs-material = ">=9.1.15"
mkdocstrings = {version=">=0.24.3", extras=["python"]}
mkdocs-gen-files = ">=0.5.0"

[tool.poetry]
packages = [
  {include = "*", from="src/backend"},
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
python_files = [
    "tests.py",
    "test_*.py",
]

[tool.coverage.run]
include = ["src/backend/**"]
omit = [
  "*/migrations/*",
  "*/tests/*",
  "scripts/*",
  "manage.py",
  "*/src/frontend/*",
  "*.txt",
]
plugins = ["django_coverage_plugin"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]
exclude = ["scripts/"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


[tool.ruff]
line-length = 79
target-version = "py312"
# Exclude a variety of commonly ignored directories.
extend-exclude = [
    "*/migrations/*.py",
    "staticfiles/*",
    "scripts/*",
]
fix = true

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  # "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  # "G",  # Logging statement uses f-string
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG",  # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  # "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF",
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "UP038", # Checks for uses of isinstance/issubclass that take a tuple
          # of types for comparison.
          # Deactivated because it can make the code slow:
          # https://github.com/astral-sh/ruff/issues/7871
  "INP001",
  "COM812",
  "ISC001",
]
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
    "UP038",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
# Use a single line between direct and from import
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"


[tool.djlint]
blank_line_after_tag="load,extends,include"
blank_line_before_tag="load,extends,include"
close_void_tags=true
# custom_blocks="toc,example"
# custom_html="mjml,simple-greeting,mj-\w+"
# format_attribute_template_tags=true
format_css=true
format_js=true
indent=2
# line_break_after_multiline_tag=true
# max_attribute_length=3
# max_blank_lines=1
max_line_length=80
profile="django"
# ref issue:
#   - https://github.com/Riverside-Healthcare/djLint/issues/703
exclude=".git,docs,.eggs,src/seconddx_web/templates/tags,src/frontend"
# TODO: remove from the ignore list:
#       H013,H021,H023,D018
# TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
ignore="H029,H005,H030,H031,H006,H013,H021,H023,D018,T002"
# include = "H017,H035"
# preserve_blank_lines=false

[tool.djlint.html]
indent_size=2

[tool.djlint.css]
indent_size=2

[tool.djlint.js]
indent_size=2

[tool.bandit]
exclude_dirs = ["tests"]
targets = "src/backend/"
skips = ["B602", "B324"]
